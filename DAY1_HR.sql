-- this is how you comment
-- double hpen is comment in SQL
-- SQL most of the time is case insensetive

-- * is wildcard, means all the columns
-- SQL QUERY END WITH semi column
-- each query will run individually
SELECT * FROM EMPLOYEES ;
-- You can only use the table that exist or it will give you error
SELECT * FROM COUNTRIES ;

--Task #1
-- Using above example, see all data from all other tables
SELECT * FROM DEPARTMENTS;
SELECT * FROM JOB_HISTORY;
SELECT * FROM JOBS ;
SELECT * FROM LOCATIONS ;
SELECT * FROM REGIONS ;
 --SELECTING SPECIFIC COLUMN RATHER THAN ALL OF THEM FROM A TABLE
 --YOU CAN USE COLUMN NAME SEPERATED BY COMMA TO GET ONLY COLUMNS YOU CARE ABOUT
 
 SELECT FIRST_NAME, SALARY 
 FROM EMPLOYEES ;
 
 --TASK #2 : SHOW THE RESULT OF ALL LAST_NAME, HIRE_DATE, DEPARTMENT_ID
 
 SELECT LAST_NAME, HIRE_DATE, DEPARTMENT_ID 
 FROM EMPLOYEES ;
 --WHITE SPACE DOES, MAKE IT AS MUCH READABLE AS POSSIBLE WITH YOUR IMAGINATION
 /*
 this is how you do multi line comment
 now select these columns from locations table
   street_address
   city
   state_province
 */
 
 SELECT STREET_ADDRESS, CITY, STATE_PROVINCE FROM LOCATIONS;
 
 
 -- RESTRICTING THE ROW WITH CONDITION
 -- WHERE CLAUSE CAN BE USED AFTER THE FROM TABLENAME
 -- TO THE RESTRICT THE RESULT ACCORDING TO CERTAIN CONDITION
 -- GET ALL THE EMPLOYEE INFORMATION IF THEIR SALARY IS MORE THAN 10000
 SELECT * FROM EMPLOYEES 
 WHERE SALARY > 10000;
 
 --WHAT OTHERS RELATIONAL OPERATORS ARE AVAILABLE
 -- = EQUAL | NOT EQUAL <>
 SELECT FIRST_NAME, SALARY  
 FROM EMPLOYEES
 WHERE SALARY = 24000;
 -- WHERE SALARY != (NOT EQUAL) OR <> (NOT EQUAL) 24000;
 -- FIND THE OPPOSITE OF ABOVE RESULT
 
 -- WHAT ABOUT STRING 
 -- FIND OUT FIRST NAME AND LAST NAME OF EMPLOYEES 
 -- WITH FIRST_NAME ALEXANDER
 SELECT FIRST_NAME, LAST_NAME
 FROM EMPLOYEES
 WHERE FIRST_NAME = 'Alexander';
 --COMMAND IS NOT CASE SENSITIVE BUT THE DATA IS CASE SENSITIVE
 -- TASK#4: SELECT ALL LOCATION INFO FROM DEPARTMENT TABLE
           -- NOT INCLUDING THE LOCATION ID OF 1700
 SELECT * FROM DEPARTMENTS
 WHERE LOCATION_ID <> 1700;
 -- >, >=, <, <= ARE ALSO AVAIBLE
 -- LOGICAL OPERATOR AND OR
 -- FIND OUT ALL EMPLOYEES WITH SALARY BETWEEN 8000, 12000
 
 SELECT * FROM EMPLOYEES 
 WHERE SALARY >= 8000 AND SALARY <= 12000 ;
 
 -- FIND OUT ALL EMPLOYEE_ID, FIRST_NAME, SALARY WITH SALARY BETWEEN OVER 12000, AND LESS THAN 6000
 
 SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
 FROM EMPLOYEES
 WHERE SALARY >= 12000 OR SALARY <= 6000;
 
 -- DIFFERENT APPROACH
 -- FIND OUT ALL EMPLOYEES WITH SALARY BETWEN 8000 , 12000
 SELECT * FROM EMPLOYEES
 WHERE SALARY=8000 AND SALARY=12000;
 
 


























