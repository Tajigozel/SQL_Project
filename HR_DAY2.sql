--Day 2 SQL Practices
SELECT * FROM EMPLOYEES ; 

-- FIND OUT ALL THE EMPLOYEES WITH DEPARTMENT ID OF 60 OR 100 

SELECT * FROM EMPLOYEES 
WHERE DEPARTMENT_ID = 60 OR DEPARTMENT_ID = 100 ; 

--- ON TOP OF ABOVE QUERY ONLY GET FIRST NAME AND LAST NAME AND SALARY AND JOB_ID 

SELECT FIRST_NAME , LAST_NAME, SALARY, JOB_ID 
FROM EMPLOYEES 
WHERE DEPARTMENT_ID = 60 OR DEPARTMENT_ID = 100 ; 

-- > >=  =  !=  <>  <  >=  
-- AND , OR 

--  FIND OUT ALL THE JOBS INFORMATION IF THE MINIMUM SALARY IS MORE THAN 5500 AND LESS THAN 10000 
-- USE JOBS TABLE 
-- BETWEEN ... AND ... 
SELECT * FROM JOBS 
--WHERE MIN_SALARY BETWEEN 5500 AND 10000 ;   -- These two lines are doing same thing 
WHERE MIN_SALARY >= 5500 AND MIN_SALARY <= 10000;



-- FIND OUT ALL THE EMPLOYEES FIRST NAME AND PHONE AND DEPARTMENT_ID
-- WITH DEPARTMENT ID OF 60 OR 100 OR 90 OR 80, 120
-- IF WE ARE CHECKING FOR MULTIPLE POSSIBLE VALUES FOR SAME COLUMN 
-- WE CAN USE  IN (VALUE1, VALUE2, VALUE3......)

SELECT FIRST_NAME , PHONE_NUMBER , DEPARTMENT_ID
FROM EMPLOYEES 
WHERE DEPARTMENT_ID IN (60,100,90,80,120); 
-- ABOVE QUERY IS SAME AS BELOW QUERY USING OR 
SELECT FIRST_NAME, PHONE_NUMBER , DEPARTMENT_ID
    FROM EMPLOYEES  
WHERE DEPARTMENT_ID =60 OR 
      DEPARTMENT_ID =70 OR 
      DEPARTMENT_ID =80 OR 
      DEPARTMENT_ID =90 ;
-- I WANT TO GET ALL THE FIRST NAME THAT STARTS WITH LETTER A 
--EMPLOYEES TABLE
--% IS WILD CARD THAT CAN REPRESENT 0 OR MORE CHARACTERS
--FOR EXAMPLE 'A%' MEANS-> ANY STRING THAT START WITH LETTER A
--WE CAN USE IT TO PARTIAL STRING MATCH

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'A%';

-- I WANT TO GET ALL THE FIRST NAME THAT END WITH LETTER a
-- %a
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%a';

--FIND OUT ALL FIRST_NAME AND LAST_NAME FROM EMPLOYEES TABLE
--IF THE FIRST NAME STARTS WITH A AND LAST NAME END WITH n
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'A%' AND LAST_NAME LIKE '%n' ;

--FIND OUT ALL THE NAMES THAT CONTAINS letter a, anywhere
--'%a%' means a can be anywhere
SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%a%';

--FROM EMPLOYEES TABLE FIND OUT ALL JOB ID START WITH AD
--FROM EMPLOYEES TABLE FIND OUT ALL JOB ID END NOT  WITH REP

SELECT JOB_ID
FROM EMPLOYEES
WHERE JOB_ID LIKE 'AD%';

SELECT JOB_ID
FROM EMPLOYEES
WHERE JOB_ID NOT LIKE '%REP';

--FIND OUT ALL THE FIRST_NAME DOES NOT CONTAIN LETTER a

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME NOT LIKE '%a%';

--MAKE ABOVE QUERY CASE SENSITIVE
--first name does not contains a and it does not start with A

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME NOT LIKE '%a%' AND FIRST_NAME NOT LIKE 'A%';

--WORKING WITH NULL VALUE
--IF A CELL HAS NO VALUE ENTERED IT'S NULL

--FIND OUT THE EMPLOYEES INFORMATION IF THE EMPLOYEES MANAGER_ID IS NULL
SELECT * FROM EMPLOYEES
WHERE MANAGER_ID IS NULL;

--FIND OUT FIRST_NAME AND MANAGER_ID IF THE MANAGER_ID IN NOT NULL

SELECT FIRST_NAME, MANAGER_ID
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL;

--FUNCTIONS IN SQL => IT IS PRE-WRITTEN FUNCTIONALITY WE CAN DIRECTLY USE
--SINGLE ROW FUNCTIONS
/*

*/



--MULTI-ROW FUNCTION | GROUP FUNCTION | AGREGAGE FUNCTION




      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      